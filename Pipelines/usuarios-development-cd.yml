trigger: none

parameters:
  - name: imageTag
    type: string
    default: 'Usuarios-Development-latest'

variables:
  - group: Usuarios

pool:
  vmImage: 'ubuntu-latest'

steps:
  - task: AzureCLI@2
    displayName: Deploy da Usuarios.Api no Azure Container Instances
    inputs:
      azureSubscription: 'fcgrm-connection'
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        echo "Iniciando deploy do usuarios-development no ACI..."

        # Remover container anterior, se existir
        az container delete \
          --resource-group fcg \
          --name usuarios-development \
          --yes \
          --no-wait

        # Criar novo container com a imagem recebida
        az container create \
          --resource-group fcg \
          --name usuarios-development \
          --image fcgcr.azurecr.io/fcgcr-repo:${{ parameters.imageTag }} \
          --dns-name-label usuarios-development \
          --ports 80 \
          --location eastus \
          --os-type Linux \
          --cpu 1 \
          --memory 1.5 \
          --registry-login-server fcgcr.azurecr.io \
          --registry-username "${ACR_USERNAME}" \
          --registry-password "${ACR_PASSWORD}" \
          --environment-variables \
              DOTNET_ENVIRONMENT=Development \
              ConnectionStrings__DefaultConnection="${CONN_STR}" \
              JwtSettings__SecretKey="${JWT_SECRET}" \
              JwtSettings__Issuer="${JWT_ISSUER}" \
              JwtSettings__Audience="${JWT_AUDIENCE}" \
              JwtSettings__ExpirationMinutes="${JWT_EXPIRATION}" \
              EmailSettings__SmtpUser="${SMTP_USER}" \
              EmailSettings__SmtpPassword="${SMTP_PASS}" \
              EmailSettings__SmtpServer="${SMTP_SERVER}" \
              EmailSettings__SmtpPort="${SMTP_PORT}" \
              ApplicationInsights__ConnectionString="${APPINSIGHTS_CONN}" \
              ApplicationInsights__EnableDebugLogger="${APPINSIGHTS_DEBUG}" \
              ApplicationInsights__EnableAdaptiveSampling="${APPINSIGHTS_SAMPLING}" \
              Logging__LogLevel__Default="${LOG_DEFAULT}" \
              Logging__LogLevel__Microsoft="${LOG_MICROSOFT}" \
              Logging__LogLevel__Microsoft_ApplicationInsights="${LOG_MICROSOFT_AI}" \
              Logging__LogLevel__Microsoft_Hosting_Lifetime="${LOG_MICROSOFT_LIFETIME}"

        echo "Container 'usuarios-development' publicado com sucesso no ACI!"
    env:
      ACR_USERNAME: $(acrUsername)
      ACR_PASSWORD: $(acrPassword)
      CONN_STR: $(ConnectionStrings__DefaultConnection)
      JWT_SECRET: $(JwtSettings__SecretKey)
      JWT_ISSUER: $(JwtSettings__Issuer)
      JWT_AUDIENCE: $(JwtSettings__Audience)
      JWT_EXPIRATION: $(JwtSettings__ExpirationMinutes)
      SMTP_USER: $(EmailSettings__SmtpUser)
      SMTP_PASS: $(EmailSettings__SmtpPassword)
      SMTP_SERVER: $(EmailSettings__SmtpServer)
      SMTP_PORT: $(EmailSettings__SmtpPort)
      APPINSIGHTS_CONN: $(ApplicationInsights__ConnectionString)
      APPINSIGHTS_DEBUG: $(ApplicationInsights__EnableDebugLogger)
      APPINSIGHTS_SAMPLING: $(ApplicationInsights__EnableAdaptiveSampling)
      LOG_DEFAULT: $(Logging__LogLevel__Default)
      LOG_MICROSOFT: $(Logging__LogLevel__Microsoft)
      LOG_MICROSOFT_AI: $(Logging__LogLevel__Microsoft.ApplicationInsights)
      LOG_MICROSOFT_LIFETIME: $(Logging__LogLevel__Microsoft.Hosting.Lifetime)